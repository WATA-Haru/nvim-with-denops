[[plugins]]
repo = 'Shougo/dpp-ext-lazy'

[[plugins]] #filer
repo = 'stevearc/oil.nvim'
lua_add = '''
    require("oil").setup({
      view_options = {
        show_hidden = true,
        is_hidden_file = function(name, bufnr)
          local m = name:match("^%.")
          return m ~= nil
        end,
        is_always_hidden = function(name, bufnr)
          return false
        end,
      },
      lsp_file_methods = {
        -- https://github.com/stevearc/oil.nvim/blob/07f80ad645895af849a597d1cac897059d89b686/README.md?plain=1#L182
        autosave_changes = true,
      }
    })
    -- Ex, Ve, Seコマンドを定義
    vim.api.nvim_create_user_command("Ex", function(opts)
      local path = opts.args
      if path == "" then
        vim.cmd("Oil %:p:h")
      else
        vim.cmd("Oil " .. path)
      end
    end, { nargs = '?', complete = 'file' }) -- complete='file'を追加
    
    vim.api.nvim_create_user_command("Ve", function(opts)
      local path = opts.args
      if path == "" then
        vim.cmd("vertical Oil %:p:h")
      else
        vim.cmd("vertical Oil " .. path)
      end
    end, { nargs = '?', complete = 'file' })
    
    vim.api.nvim_create_user_command("Se", function(opts)
      local path = opts.args
      if path == "" then
        vim.cmd("split Oil %:p:h")
      else
        vim.cmd("split Oil " .. path)
      end
    end, { nargs = '?', complete = 'file' })
'''

[[plugins]] #devicon
repo = 'nvim-tree/nvim-web-devicons'

[[plugins]] #colorscheme
repo = 'jacoborus/tender.vim'

[[plugins]] #fuzzy finder
repo = 'nvim-telescope/telescope.nvim'
lua_add = '''
    require('telescope').setup({
        defaults = {
      sorting_strategy = "ascending",
      winblend = 4,
      file_ignore_patterns = {
        "^.git/",
        "^node_modules/",
      }
        }
    })
'''

[[plugins]] # telescope depends
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'neovim/nvim-lspconfig'

[[plugins]] # git
repo = 'lambdalisue/vim-gin'

[[plugins]] # zen-mode
repo = "folke/zen-mode.nvim"

[[plugins]] # treesitter
repo = "nvim-treesitter/nvim-treesitter"
# 遅延読み込み - ファイルを開いた時にのみ読み込む
on_event = ["BufNewFile", "BufRead"]
# アップデート時にTSUpdateを実行
hook_post_update = '''
  vim.cmd("TSUpdate")
'''
lua_add = '''
  require'nvim-treesitter.configs'.setup {
    ensure_installed = { "c", "lua", "vim", "vimdoc", "query", "markdown", "markdown_inline", "vue", "typescript","html","css", "rust", "javascript"},
    --ensure_installed = "all",
    sync_install = false,
    auto_install = true,
    highlight = { enable = true },
    indent = { enable = true },
  }
'''
[[plugins]] #code-completion
repo = 'Shougo/ddc.vim'
hook_source = 'source ~/.config/nvim-with-denops/plugins/ddc/config.d/ddc.vim'

# ddc の補完を表示させるやつ
[[plugins]]
repo = 'Shougo/ddc-ui-native'
# バッファー内の情報を補完
[[plugins]]
repo = 'Shougo/ddc-source-around'
# ヘッダーのマッチを
[[plugins]]
repo = 'Shougo/ddc-filter-matcher_head'
# 補完を現在の入力に応じて変化させる
[[plugins]]
repo = 'Shougo/ddc-filter-sorter_rank'
# ファイルの補完
[[plugins]]
repo = 'LumaKernel/ddc-source-file'
# denops.vim (ddc の依存関係)
[[plugins]]
repo = 'vim-denops/denops.vim'
[[plugins]]
repo = 'Shougo/ddc-source-lsp'
[[plugins]]
repo = 'tani/ddc-fuzzy'

[[plugins]] #snacks for file rename
repo = 'folke/snacks.nvim'
lua_add = '''
  require("snacks").setup({
    bigfile = { enabled = true },
    dashboard = { enabled = false },
    explorer = { enabled = true },
    indent = { enabled = true },
    input = { enabled = true },
    picker = { enabled = true },
    notifier = { enabled = false },
    quickfile = { enabled = true },
    scope = { enabled = true },
    scroll = { enabled = false },
    statuscolumn = { enabled = false },
    words = { enabled = true },
  })
'''

